{"inputs": [{"tagValue": "Input file in FASTX (FASTQ or FASTA) format.", "tagAttributes": {"name": "INFILE_input", "optionName": "input", "fileClass": "file", "positional": "1", "optional": "false", "array": "false", "type": "FASTX"}, "tagName": "input"}, {"tagValue": "Second (mate) input file (FASTX) for paired-end sequencing libraries.", "tagAttributes": {"name": "INFILE_input_mate", "optionName": "input-mate", "fileClass": "file", "positional": "2", "optional": "true", "array": "false", "type": "FASTX"}, "tagName": "input"}], "parameters": [{"tagValue": "Do not allow indels in the alignments (allow only mismatches). Currently only supported for anchored adapters.", "tagAttributes": {"name": "no_indels", "default": "{{FALSE}}", "optionName": "--no-indels", "positional": "false", "admin": "false", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Allow IUPAC wildcards in reads.", "tagAttributes": {"name": "match_read_wildcards", "default": "{{FALSE}}", "optionName": "--match-read-wildcards", "positional": "false", "admin": "false", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Discard reads that contain the adapter instead of trimming them. Also use --overlap in order to avoid throwing away too many randomly matching reads.", "tagAttributes": {"name": "discard_trimmed", "default": "{{FALSE}}", "optionName": "--discard-trimmed", "positional": "false", "admin": "false", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Discard reads that do not contain the adapter.", "tagAttributes": {"name": "discard_untrimmed", "default": "{{FALSE}}", "optionName": "--discard-untrimmed", "positional": "false", "admin": "false", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Match and redirect reads to output/untrimmed-output as usual, but do not remove adapters.", "tagAttributes": {"name": "no_trim", "default": "{{FALSE}}", "optionName": "--no-trim", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Trim N&apos;s on ends of reads.", "tagAttributes": {"name": "trim_n", "default": "{{FALSE}}", "optionName": "--trim-n", "positional": "false", "admin": "false", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Mask adapters with &apos;N&apos; characters instead of trimming them.", "tagAttributes": {"name": "mask_adapter", "default": "{{FALSE}}", "optionName": "--mask-adapter", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Do not print a report at the end.", "tagAttributes": {"name": "quiet", "default": "{{FALSE}}", "optionName": "--quiet", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Colorspace mode: Also trim the color that is adjacent to the found adapter.", "tagAttributes": {"name": "colorspace", "default": "{{FALSE}}", "optionName": "--colorspace", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "When in colorspace, double-encode colors (map 0,1,2,3,4 to A,C,G,T,N).", "tagAttributes": {"name": "double_encode", "default": "{{FALSE}}", "optionName": "--double-encode", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "When in colorspace, trim primer base and the first color (which is the transition to the first nucleotide).", "tagAttributes": {"name": "trim_primer", "default": "{{FALSE}}", "optionName": "--trim-primer", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "For colorspace: Strip the _F3 suffix of read names.", "tagAttributes": {"name": "strip_f3", "default": "{{FALSE}}", "optionName": "--strip-f3", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "MAQ-compatible colorspace output. This enables --colorspace, --double-encode, --trim-primer, --strip-f3 and --suffix &apos;/1&apos;.", "tagAttributes": {"name": "maq", "default": "{{FALSE}}", "optionName": "--maq", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "BWA-compatible colorspace output. This enables --colorspace, --double-encode, --trim-primer, --strip-f3 and --suffix &apos;/1&apos;.", "tagAttributes": {"name": "bwa", "default": "{{FALSE}}", "optionName": "--bwa", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Do not change negative quality values to zero. Colorspace quality values of -1 would appear as spaces in the output FASTQ file. Since many tools have problems with that, negative qualities are converted to zero when trimming colorspace data. Use this option to keep negative qualities.", "tagAttributes": {"name": "no_zero_cap", "default": "{{FALSE}}", "optionName": "--no-zero-cap", "positional": "false", "admin": "true", "range": "[{{TRUE}},{{FALSE}}]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Input file format; can be either &apos;fasta&apos;, &apos;fastq&apos; or &apos;sra-fastq&apos;. Ignored when reading csfasta/qual files (default: auto-detect from file name extension).", "tagAttributes": {"name": "format", "default": "{{FALSE}}", "optionName": "--format", "positional": "false", "admin": "true", "range": "[fasta,fastq,sra-fastq]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Discard trimmed reads that are longer than LENGTH. Reads that are too long even before adapter removal are also discarded. In colorspace, an initial primer is not counted (default: no limit).", "tagAttributes": {"name": "maximum_length", "default": "{{FALSE}}", "optionName": "--maximum-length", "positional": "false", "admin": "false", "range": "1:", "type": "string", "class": "IntRange"}, "tagName": "parameter"}, {"tagValue": "Discard trimmed reads that are shorter than LENGTH. Reads that are too short even before adapter removal are also discarded. In colorspace, an initial primer is not counted (default: 0).", "tagAttributes": {"name": "minimum_length", "default": "{{FALSE}}", "optionName": "--minimum-length", "positional": "false", "admin": "false", "range": "1:", "type": "string", "class": "IntRange"}, "tagName": "parameter"}, {"tagValue": "Trim low-quality bases from 5&apos; and/or 3&apos; ends of reads before adapter removal. If one value is given, only the 3&apos; end is trimmed. If two comma-separated cutoffs are given, the 5&apos; end is trimmed with the first cutoff, the 3&apos; end with the second. The algorithm is the same as the one used by BWA (see documentation) (default: no trimming).", "tagAttributes": {"name": "quality_cutoff", "default": "{{FALSE}}", "optionName": "--quality-cutoff", "positional": "false", "admin": "false", "range": "0:40", "type": "string", "class": "IntList"}, "tagName": "parameter"}, {"tagValue": "Add this prefix to read names.", "tagAttributes": {"name": "prefix", "default": "{{FALSE}}", "optionName": "--prefix", "positional": "false", "admin": "true", "range": "n/a", "type": "string", "class": "String"}, "tagName": "parameter"}, {"tagValue": "Add this suffix to read names.", "tagAttributes": {"name": "suffix", "default": "{{FALSE}}", "optionName": "--suffix", "positional": "false", "admin": "true", "range": "n/a", "type": "string", "class": "String"}, "tagName": "parameter"}, {"tagValue": "Search for TAG followed by a decimal number in the name of the read (description/comment field of the FASTA or FASTQ file). Replace the decimal number with the correct length of the trimmed read. For example, use --length-tag &apos;length=&apos; to correct fields like &apos;length=123&apos;.", "tagAttributes": {"name": "length_tag", "default": "{{FALSE}}", "optionName": "--length-tag", "positional": "false", "admin": "true", "range": "n/a", "type": "string", "class": "String"}, "tagName": "parameter"}, {"tagValue": "Maximum allowed error rate (no. of errors divided by the length of the matching region; default: 0.1).", "tagAttributes": {"name": "error_rate", "default": "0.1", "optionName": "--error-rate", "positional": "false", "admin": "false", "range": "0:1", "type": "string", "class": "FloatRange"}, "tagName": "parameter"}, {"tagValue": "Try to remove adapters at most COUNT times. Useful when an adapter gets appended multiple times (default: 1).", "tagAttributes": {"name": "times", "default": "1", "optionName": "--times", "positional": "false", "admin": "false", "range": "1:", "type": "string", "class": "IntRange"}, "tagName": "parameter"}, {"tagValue": "The max proportion of N&apos;s allowed in a read. A number &lt; 1 will be treated as a proportion while a number &gt; 1 will be treated as the maximum number of N&apos;s contained (default: 0.1).", "tagAttributes": {"name": "max_n", "default": "0.1", "optionName": "--max-n", "positional": "false", "admin": "false", "range": "0:1:", "type": "string", "class": "FloatInt"}, "tagName": "parameter"}, {"tagValue": "Minimum overlap length. If the overlap between the read and the adapter is shorter than LENGTH, the read is not modified. This reduces the number of bases trimmed purely due to short random adapter matches (default: 2).", "tagAttributes": {"name": "overlap", "default": "2", "optionName": "--overlap", "positional": "false", "admin": "false", "range": "1:", "type": "string", "class": "IntRange"}, "tagName": "parameter"}, {"tagValue": "Assume that quality values are encoded as ascii(quality + QUALITY_BASE). The default (33) is usually correct, except for reads produced by some versions of the Illumina pipeline, where this should be set to 64 (default: 33).", "tagAttributes": {"name": "quality_base", "default": "33", "optionName": "--quality-base", "positional": "false", "admin": "true", "range": "[33,64]", "type": "string", "class": "IntSet"}, "tagName": "parameter"}, {"tagValue": "Sequence of an adapter that was ligated to the 3&apos; end. The adapter itself and anything that follows is trimmed. If the adapter sequence ends with the &apos;$&apos; character, the adapter is anchored to the end of the read and only found if it is a suffix of the read.", "tagAttributes": {"name": "adapter", "default": "{{FALSE}}", "optionName": "--adapter", "positional": "false", "admin": "false", "range": "n/a", "type": "string", "class": "NucleotideIUPACMulti"}, "tagName": "parameter"}, {"tagValue": "Sequence of an adapter that was ligated to the 5&apos; end. If the adapter sequence starts with the character &apos;^&apos;, the adapter is &apos;anchored&apos;. An anchored adapter must appear in its entirety at the 5&apos; end of the read (it is a prefix of the read). A non-anchored adapter may appear partially at the 5&apos; end, or it may occur within the read. If it is found within a read, the sequence preceding the adapter is also trimmed. In all cases, the adapter itself is trimmed.", "tagAttributes": {"name": "front", "default": "{{FALSE}}", "optionName": "--front", "positional": "false", "admin": "false", "range": "n/a", "type": "string", "class": "NucleotideIUPACMulti"}, "tagName": "parameter"}, {"tagValue": "Sequence of an adapter that was ligated to the 5&apos; or 3&apos; end. If the adapter is found within the read or overlapping the 3&apos; end of the read, the behavior is the same as for the --adapter option. If the adapter overlaps the 5&apos; end (beginning of the read), the initial portion of the read matching the adapter is trimmed, but anything that follows is kept.", "tagAttributes": {"name": "anywhere", "default": "{{FALSE}}", "optionName": "--anywhere", "positional": "false", "admin": "false", "range": "n/a", "type": "string", "class": "NucleotideIUPACMulti"}, "tagName": "parameter"}, {"tagValue": "3&apos; adapter to be removed from the second read in a pair.", "tagAttributes": {"name": "A", "default": "{{FALSE}}", "optionName": "-A", "positional": "false", "admin": "false", "range": "n/a", "type": "string", "class": "NucleotideIUPACMulti"}, "tagName": "parameter"}, {"tagValue": "5&apos; adapter to be removed from the second read in a pair.", "tagAttributes": {"name": "G", "default": "{{FALSE}}", "optionName": "-G", "positional": "false", "admin": "false", "range": "n/a", "type": "string", "class": "NucleotideIUPACMulti"}, "tagName": "parameter"}, {"tagValue": "5&apos;/3 adapter to be removed from the second read in a pair.", "tagAttributes": {"name": "B", "default": "{{FALSE}}", "optionName": "-B", "positional": "false", "admin": "false", "range": "n/a", "type": "string", "class": "NucleotideIUPACMulti"}, "tagName": "parameter"}, {"tagValue": "Remove this suffix from read names if present. Can be given multiple times.", "tagAttributes": {"name": "strip_suffix", "default": "{{FALSE}}", "optionName": "--strip-suffix", "positional": "false", "admin": "false", "range": "n/a", "type": "string", "class": "StringMulti"}, "tagName": "parameter"}, {"tagValue": "Remove LENGTH bases from the beginning or end of each read. If LENGTH is positive, the bases are removed from the beginning of each read. If LENGTH is negative, the bases are removed from the end of each read. This option can be specified twice if the LENGTHs have different signs.", "tagAttributes": {"name": "cut", "default": "{{FALSE}}", "optionName": "--cut", "positional": "false", "admin": "false", "range": ":", "type": "string", "class": "IntMulti"}, "tagName": "parameter"}, {"tagValue": "Remove LENGTH bases from the beginning or end of each read (see --cut).", "tagAttributes": {"name": "U", "default": "{{FALSE}}", "optionName": "-U", "positional": "false", "admin": "false", "range": ":", "type": "string", "class": "IntMulti"}, "tagName": "parameter"}], "credits": [{"tagValue": "Marcel Martin", "tagAttributes": {"email": "marcel.martin@scilifelab.se"}, "tagName": "author"}, {"tagValue": "n/a", "tagAttributes": {"DOI": "10.14806/ej.17.1.200", "name": "Cutadapt removes adapter sequences from high-throughput sequencing reads.", "URL": "http://journal.embnet.org/index.php/embnetjournal/article/view/200", "journal": "EMBnet.journal", "authors": "Martin M", "volume": "17", "year": "2011", "issue": "1"}, "tagName": "reference"}], "launcher": [{"tagValue": "n/a", "tagAttributes": {"type": "python"}, "tagName": "launcher"}], "outputs": [{"tagValue": "Write modified reads to FILE. FASTQ or FASTA format is chosen depending on input.", "tagAttributes": {"redirect": "false", "name": "OUTFILE_output", "optionName": "--output", "fileClass": "file", "positional": "false", "optional": "false", "array": "false", "type": "FASTX"}, "tagName": "output"}, {"tagValue": "Write report.", "tagAttributes": {"redirect": ">", "name": "OUTFILE_report", "optionName": "--report", "fileClass": "file", "positional": "3", "optional": "false", "array": "false", "type": "Cutadapt_report"}, "tagName": "output"}, {"tagValue": "Write reads that are too short (according to length specified by --minimum-length) to FILE (default: discard reads).", "tagAttributes": {"redirect": "false", "name": "OUTFILE_too_short_output", "optionName": "--too-short-output", "fileClass": "file", "positional": "false", "optional": "true", "array": "false", "type": "FASTX"}, "tagName": "output"}, {"tagValue": "Write reads that are too long (according to length specified by --maximum-length) to FILE (default: discard reads).", "tagAttributes": {"redirect": "false", "name": "OUTFILE_too_long_output", "optionName": "--too-long-output", "fileClass": "file", "positional": "false", "optional": "true", "array": "false", "type": "FASTX"}, "tagName": "output"}, {"tagValue": "Write reads that do not contain the adapter to FILE (default: output to same file as trimmed reads).", "tagAttributes": {"redirect": "false", "name": "OUTFILE_untrimmed_output", "optionName": "--untrimmed-output", "fileClass": "file", "positional": "false", "optional": "true", "array": "false", "type": "FASTX"}, "tagName": "output"}, {"tagValue": "Write information about each read and its adapter matches into FILE. See the documentation for the file format.", "tagAttributes": {"redirect": "false", "name": "OUTFILE_info_file", "optionName": "--info-file", "fileClass": "file", "positional": "false", "optional": "true", "array": "false", "type": "Cutadapt_info"}, "tagName": "output"}, {"tagValue": "When the adapter matches in the middle of a read, write the rest (after the adapter) into FILE.", "tagAttributes": {"redirect": "false", "name": "OUTFILE_rest_file", "optionName": "--rest-file", "fileClass": "file", "positional": "false", "optional": "true", "array": "false", "type": "FASTX"}, "tagName": "output"}, {"tagValue": "When the adapter has wildcard bases (&apos;N&apos;s), write adapter bases matching wildcard positions to FILE. When there are indels in the alignment, this will often not be accurate.", "tagAttributes": {"redirect": "false", "name": "OUTFILE_wildcard_file", "optionName": "--wildcard-file", "fileClass": "file", "positional": "false", "optional": "true", "array": "false", "type": "FASTX"}, "tagName": "output"}, {"tagValue": "Write second read in a pair to FILE.", "tagAttributes": {"redirect": "false", "name": "OUTFILE_paired_output", "optionName": "--paired-output", "fileClass": "file", "positional": "false", "optional": "true", "array": "false", "type": "FASTX"}, "tagName": "output"}, {"tagValue": "Write the second read in a pair to this FILE when no adapter was found in the first read. Use this option together with --untrimmed-output when trimming paired-end reads (default: output to same file as trimmed reads).", "tagAttributes": {"redirect": "false", "name": "OUTFILE_untrimmed_paired_output", "optionName": "--untrimmed-paired-output", "fileClass": "file", "positional": "false", "optional": "true", "array": "false", "type": "FASTX"}, "tagName": "output"}], "optOutBoolParameters": [{"tagValue": "Switch for enabling the optional output port \"--too-short-output\". Set to true in workflow file if this output is desired.", "tagAttributes": {"default": "false", "type": "boolean", "name": "_OUTFILE_too_short_output"}, "tagName": "parameter"}, {"tagValue": "Switch for enabling the optional output port \"--too-long-output\". Set to true in workflow file if this output is desired.", "tagAttributes": {"default": "false", "type": "boolean", "name": "_OUTFILE_too_long_output"}, "tagName": "parameter"}, {"tagValue": "Switch for enabling the optional output port \"--untrimmed-output\". Set to true in workflow file if this output is desired.", "tagAttributes": {"default": "false", "type": "boolean", "name": "_OUTFILE_untrimmed_output"}, "tagName": "parameter"}, {"tagValue": "Switch for enabling the optional output port \"--info-file\". Set to true in workflow file if this output is desired.", "tagAttributes": {"default": "false", "type": "boolean", "name": "_OUTFILE_info_file"}, "tagName": "parameter"}, {"tagValue": "Switch for enabling the optional output port \"--rest-file\". Set to true in workflow file if this output is desired.", "tagAttributes": {"default": "false", "type": "boolean", "name": "_OUTFILE_rest_file"}, "tagName": "parameter"}, {"tagValue": "Switch for enabling the optional output port \"--wildcard-file\". Set to true in workflow file if this output is desired.", "tagAttributes": {"default": "false", "type": "boolean", "name": "_OUTFILE_wildcard_file"}, "tagName": "parameter"}, {"tagValue": "Switch for enabling the optional output port \"--paired-output\". Set to true in workflow file if this output is desired.", "tagAttributes": {"default": "false", "type": "boolean", "name": "_OUTFILE_paired_output"}, "tagName": "parameter"}, {"tagValue": "Switch for enabling the optional output port \"--untrimmed-paired-output\". Set to true in workflow file if this output is desired.", "tagAttributes": {"default": "false", "type": "boolean", "name": "_OUTFILE_untrimmed_paired_output"}, "tagName": "parameter"}], "launcherArguments": [{"tagValue": "n/a", "tagAttributes": {"name": "file", "value": "component.py"}, "tagName": "argument"}, {"tagValue": "n/a", "tagAttributes": {"name": "source", "value": "anduril_custom_functions.py"}, "tagName": "argument"}], "header": [{"tagValue": "Cutadapt", "tagAttributes": {}, "tagName": "name"}, {"tagValue": "1.8", "tagAttributes": {}, "tagName": "version"}, {"tagValue": "Replace &quot;ADAPTER&quot; with the actual sequence of your 3&apos; adapter. IUPAC wildcard characters are supported. The reverse complement is *not* automatically searched. All reads from the input FASTX (FASTQ or FASTA) will be written to the output FASTX with the adapter sequence removed. Adapter matching is error-tolerant. Multiple adapter sequences can be given (use further --adapter options), but only the best-matching adapter will be removed. Compressed input and output is supported and auto-detected from the file name (.gz, .xz, .bz2). Various other adapter types (5&apos; adapters, &quot;mixed&quot; 5&apos;/3&apos; adapters etc. are supported, as well as trimming of a fixed number of bases, quality trimming, trimming of paired-end reads, trimming colorspace reads and the filtering of reads by various criteria.", "tagAttributes": {}, "tagName": "doc"}], "type-parameters": [{"tagValue": "Cutadapt-specific information file format.", "tagAttributes": {"extends": "Log", "name": "Cutadapt_info"}, "tagName": "type-parameter"}, {"tagValue": "Cutadapt-specific report file format.", "tagAttributes": {"extends": "Log", "name": "Cutadapt_report"}, "tagName": "type-parameter"}], "internalParameters": [{"tagValue": "Path to executable.", "tagAttributes": {"name": "_executable", "default": "cutadapt", "optionName": "_executable", "admin": "true", "range": "n/a", "type": "string", "class": "Path"}, "tagName": "parameter"}, {"tagValue": "Execution mode. One of &apos;remote&apos;, &apos;local&apos; or &apos;none&apos;.", "tagAttributes": {"name": "_execMode", "default": "none", "optionName": "_execMode", "admin": "true", "range": "[remote,local,none]", "type": "string", "class": "StringSet"}, "tagName": "parameter"}, {"tagValue": "Number of threads.", "tagAttributes": {"name": "_cores", "default": "1", "optionName": "_cores", "admin": "true", "range": "1:48", "type": "string", "class": "IntRange"}, "tagName": "parameter"}, {"tagValue": "Memory per core. Integer, optionally followed by one the follow suffixes: K, M, G.", "tagAttributes": {"name": "_membycore", "default": "1500M", "optionName": "_membycore", "admin": "true", "range": "n/a", "type": "string", "class": "DataSizeIntBKMG"}, "tagName": "parameter"}, {"tagValue": "Runtime in h:mm:ss.", "tagAttributes": {"name": "_runtime", "default": "6:00:00", "optionName": "_runtime", "admin": "true", "range": "n/a", "type": "string", "class": "DurationHMS"}, "tagName": "parameter"}], "requires": [{"tagValue": "python", "tagAttributes": {"URL": "http://www.python.org/", "type": "manual", "optional": "false", "name": "Python"}, "tagName": "requires"}, {"tagValue": "cutadapt", "tagAttributes": {"URL": "https://code.google.com/p/cutadapt/", "type": "manual", "optional": "false", "name": "Cutadapt"}, "tagName": "requires"}], "categories": [{"tagValue": "NGS analysis", "tagAttributes": {}, "tagName": "category"}, {"tagValue": "read extraction", "tagAttributes": {}, "tagName": "category"}]}